{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/PedroLuisO\\xF1ateEgea/Desktop/ProyectoFinalSpringboot/fronted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListadoEjerciciosComponent = class ListadoEjerciciosComponent {\n  constructor(service, serviceRutina, activatedRoute, router) {\n    this.service = service;\n    this.serviceRutina = serviceRutina;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.listadoEjercicios = [];\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      //Cogemos el id del parametro\n      const id = params['id'];\n      this.id_rutina = id;\n      //comprobamos que existe en la BD\n      this.serviceRutina.obtenerRutinaPorID(id).subscribe(resp => {\n        //Si hay respuesta\n        this.devolverEjercicios();\n      }, error => {\n        console.log(error);\n        //Si da error es que no existe \n        this.router.navigate(['/listado-rutinas']);\n      });\n    });\n  }\n  devolverEjercicios() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.service.buscarEjercicios().subscribe(resp => {\n        _this.listadoEjercicios = resp;\n      });\n    })();\n  }\n  eliminarEjercicio(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.service.eliminarEjercicios(id).subscribe(response => {\n        console.log(response);\n        _this2.devolverEjercicios();\n      }, error => {\n        console.log(error);\n      });\n    })();\n  }\n  actualizarEjercicio(id) {\n    this.router.navigate(['/actualizar-Ejercicios/', id]);\n    console.log(\"click\");\n  }\n};\nListadoEjerciciosComponent = __decorate([Component({\n  selector: 'app-listado-ejercicio',\n  templateUrl: './listado.component.html',\n  styleUrls: ['./listado.component.css']\n})], ListadoEjerciciosComponent);","map":{"version":3,"names":["Component","ListadoEjerciciosComponent","constructor","service","serviceRutina","activatedRoute","router","listadoEjercicios","ngOnInit","params","subscribe","id","id_rutina","obtenerRutinaPorID","resp","devolverEjercicios","error","console","log","navigate","_this","_asyncToGenerator","buscarEjercicios","eliminarEjercicio","_this2","eliminarEjercicios","response","actualizarEjercicio","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\PedroLuisOÃ±ateEgea\\Desktop\\ProyectoFinalSpringboot\\fronted\\src\\app\\components\\ejercicios\\listado\\listado.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs';\r\nimport { Ejercicios } from 'src/app/interfaces/ejercicios';\r\nimport { CrudEjercicioService } from 'src/app/service/crudEjercicio.service';\r\nimport { CrudRutinaService } from 'src/app/service/crudRutina.service';\r\n\r\n@Component({\r\n  selector: 'app-listado-ejercicio',\r\n  templateUrl: './listado.component.html',\r\n  styleUrls: ['./listado.component.css']\r\n})\r\nexport class ListadoEjerciciosComponent {\r\n  public listadoEjercicios: Ejercicios[] = [];\r\n\r\n  public id_rutina!: Number;\r\n\r\n  constructor(private service: CrudEjercicioService, private serviceRutina: CrudRutinaService, private activatedRoute: ActivatedRoute, private router: Router){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      //Cogemos el id del parametro\r\n      const id = params['id'];\r\n      this.id_rutina = id;\r\n      //comprobamos que existe en la BD\r\n      this.serviceRutina.obtenerRutinaPorID(id).subscribe(resp => {\r\n        //Si hay respuesta\r\n        this.devolverEjercicios();\r\n      }, (error) => {\r\n        console.log(error);\r\n        //Si da error es que no existe \r\n        this.router.navigate(['/listado-rutinas']);\r\n      })\r\n\r\n    });\r\n    \r\n  }\r\n\r\n  async devolverEjercicios(){\r\n     this.service.buscarEjercicios().subscribe(resp => {\r\n      this.listadoEjercicios = resp;\r\n    });\r\n  }\r\n\r\n  async eliminarEjercicio(id: any){\r\n    this.service.eliminarEjercicios(id).subscribe(response => {\r\n      console.log(response );\r\n      this.devolverEjercicios();\r\n    },(error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  actualizarEjercicio(id: any){\r\n    this.router.navigate(['/actualizar-Ejercicios/' , id]);\r\n    console.log(\"click\");\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAYlC,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAKrCC,YAAoBC,OAA6B,EAAUC,aAAgC,EAAUC,cAA8B,EAAUC,MAAc;IAAvI,KAAAH,OAAO,GAAPA,OAAO;IAAgC,KAAAC,aAAa,GAAbA,aAAa;IAA6B,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAJ5I,KAAAC,iBAAiB,GAAiB,EAAE;EAK3C;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACH,cAAc,CAACI,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MAC5C;MACA,MAAME,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MACvB,IAAI,CAACG,SAAS,GAAGD,EAAE;MACnB;MACA,IAAI,CAACP,aAAa,CAACS,kBAAkB,CAACF,EAAE,CAAC,CAACD,SAAS,CAACI,IAAI,IAAG;QACzD;QACA,IAAI,CAACC,kBAAkB,EAAE;MAC3B,CAAC,EAAGC,KAAK,IAAI;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB;QACA,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;MAC5C,CAAC,CAAC;IAEJ,CAAC,CAAC;EAEJ;EAEMJ,kBAAkBA,CAAA;IAAA,IAAAK,KAAA;IAAA,OAAAC,iBAAA;MACrBD,KAAI,CAACjB,OAAO,CAACmB,gBAAgB,EAAE,CAACZ,SAAS,CAACI,IAAI,IAAG;QAChDM,KAAI,CAACb,iBAAiB,GAAGO,IAAI;MAC/B,CAAC,CAAC;IAAC;EACL;EAEMS,iBAAiBA,CAACZ,EAAO;IAAA,IAAAa,MAAA;IAAA,OAAAH,iBAAA;MAC7BG,MAAI,CAACrB,OAAO,CAACsB,kBAAkB,CAACd,EAAE,CAAC,CAACD,SAAS,CAACgB,QAAQ,IAAG;QACvDT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAE;QACtBF,MAAI,CAACT,kBAAkB,EAAE;MAC3B,CAAC,EAAEC,KAAK,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IAAC;EAEL;EAEAW,mBAAmBA,CAAChB,EAAO;IACzB,IAAI,CAACL,MAAM,CAACa,QAAQ,CAAC,CAAC,yBAAyB,EAAGR,EAAE,CAAC,CAAC;IACtDM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB;CACD;AA/CYjB,0BAA0B,GAAA2B,UAAA,EALtC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACW9B,0BAA0B,CA+CtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}