{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let CrearComponent = class CrearComponent {\n  //injectamos en el constructor \n  constructor(fb) {\n    this.fb = fb;\n    this.formularioEnviado = false;\n    this.empleado = {\n      firstName: '',\n      lastName: '',\n      email: ''\n    };\n    this.miFormulario = this.fb.group({\n      //si pones mas de un validator hay que añadirle los corchetes\n      nombre: [this.empleado.firstName, [Validators.required, Validators.minLength(3)]],\n      apellidos: [this.empleado.lastName, [Validators.required, Validators.min(0)]],\n      email: [this.empleado.email, [Validators.required, Validators.min(1), this.emailValidator]]\n    });\n  }\n  emailValidator(control) {\n    const value = control.value;\n    // Verifica si el valor es nulo, tiene una longitud menor a 1 o no contiene '@'\n    if (value === null || value.trim().length < 1 || !value.includes('@')) {\n      return {\n        'invalidEmail': true\n      };\n    }\n    // Si ha pasado todas las validaciones, retorna null\n    return null;\n  }\n  validacion(arg) {\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    if (this.miFormulario.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n    }\n    console.log(this.miFormulario.value);\n  }\n};\nCrearComponent = __decorate([Component({\n  selector: 'app-crear',\n  templateUrl: './crear.component.html',\n  styleUrls: ['./crear.component.css']\n})], CrearComponent);","map":{"version":3,"names":["Component","Validators","CrearComponent","constructor","fb","formularioEnviado","empleado","firstName","lastName","email","miFormulario","group","nombre","required","minLength","apellidos","min","emailValidator","control","value","trim","length","includes","validacion","arg","controls","hasError","touched","enviar","invalid","markAllAsTouched","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Nitropc\\Desktop\\ProyectoAngularSpringBoot\\ProyectoAngular16\\src\\app\\components\\crear\\crear.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/interfaces/employee';\n\n@Component({\n  selector: 'app-crear',\n  templateUrl: './crear.component.html',\n  styleUrls: ['./crear.component.css']\n})\nexport class CrearComponent {\n  public miFormulario: FormGroup;\n\n  formularioEnviado = false;\n\n  private empleado: Employee = {\n    firstName: '',\n    lastName: '',\n    email: ''\n  }\n\n  //injectamos en el constructor \n  constructor(private fb: FormBuilder) { \n    this.miFormulario = this.fb.group({\n  \n      //si pones mas de un validator hay que añadirle los corchetes\n      nombre: [this.empleado.firstName, [Validators.required, Validators.minLength(3)]],\n      apellidos: [this.empleado.lastName, [Validators.required,Validators.min(0)]],\n      email: [this.empleado.email, [Validators.required,Validators.min(1),this.emailValidator]]\n    })\n  }\n\n  \n  emailValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    const value = control.value;\n  \n    // Verifica si el valor es nulo, tiene una longitud menor a 1 o no contiene '@'\n    if (value === null || value.trim().length < 1 || !value.includes('@')) {\n      return { 'invalidEmail': true };\n    }\n  \n    // Si ha pasado todas las validaciones, retorna null\n    return null;\n  }\n\n  validacion(arg:string){\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n\n  enviar(){\n    //archivo.ts\n    this.formularioEnviado = true;\n    if(this.miFormulario.invalid){\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n    }\n    console.log(this.miFormulario.value);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAkDC,UAAU,QAAQ,gBAAgB;AAQ7E,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAWzB;EACAC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IATtB,KAAAC,iBAAiB,GAAG,KAAK;IAEjB,KAAAC,QAAQ,GAAa;MAC3BC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;IAIC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAEhC;MACAC,MAAM,EAAE,CAAC,IAAI,CAACN,QAAQ,CAACC,SAAS,EAAE,CAACN,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjFC,SAAS,EAAE,CAAC,IAAI,CAACT,QAAQ,CAACE,QAAQ,EAAE,CAACP,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5EP,KAAK,EAAE,CAAC,IAAI,CAACH,QAAQ,CAACG,KAAK,EAAE,CAACR,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,EAAC,IAAI,CAACC,cAAc,CAAC;KACzF,CAAC;EACJ;EAGAA,cAAcA,CAACC,OAAwB;IACrC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAE3B;IACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACrE,OAAO;QAAE,cAAc,EAAE;MAAI,CAAE;;IAGjC;IACA,OAAO,IAAI;EACb;EAEAC,UAAUA,CAACC,GAAU;IACnB,OAAO,IAAI,CAACd,YAAY,CAACe,QAAQ,CAAC,GAAGD,GAAG,EAAE,CAAC,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAI,IAAI,CAAChB,YAAY,CAACe,QAAQ,CAAC,GAAGD,GAAG,EAAE,CAAC,CAACG,OAAO;EAClH;EAEAC,MAAMA,CAAA;IACJ;IACA,IAAI,CAACvB,iBAAiB,GAAG,IAAI;IAC7B,IAAG,IAAI,CAACK,YAAY,CAACmB,OAAO,EAAC;MAC3B;MACA,IAAI,CAACnB,YAAY,CAACoB,gBAAgB,EAAE;MACpC;;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,YAAY,CAACS,KAAK,CAAC;EACtC;CACD;AAjDYjB,cAAc,GAAA+B,UAAA,EAL1BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWlC,cAAc,CAiD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}