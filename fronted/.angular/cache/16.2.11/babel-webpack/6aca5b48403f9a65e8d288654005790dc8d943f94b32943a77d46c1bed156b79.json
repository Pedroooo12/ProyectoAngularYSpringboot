{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/crudRutina.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CrearComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Es necesario introducir un nombre para la rutina \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CrearComponent {\n  //injectamos en el constructor \n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.formularioEnviado = false;\n    this.rutina = {\n      rutina: ''\n    };\n    this.miFormulario = this.fb.group({\n      rutina: [this.rutina.rutina, [Validators.required]]\n    });\n  }\n  validacion(arg) {\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if (this.miFormulario.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n    }\n    //Si es correcto el formulario\n    this.service.crearRutina(this.miFormulario.value).subscribe(response => {\n      this.route.navigate(['listado']);\n    }, error => {\n      console.log(\"Respuesta erronea: \" + error);\n    });\n  }\n  static #_ = this.ɵfac = function CrearComponent_Factory(t) {\n    return new (t || CrearComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrearComponent,\n    selectors: [[\"app-crear\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\", \"my-40\", \"mx-auto\"], [\"aria-hidden\", \"true\", 1, \"absolute\", \"inset-x-0\", \"top-[-10rem]\", \"-z-10\", \"transform-gpu\", \"overflow-hidden\", \"blur-3xl\", \"sm:top-[-20rem]\"], [1, \"relative\", \"left-1/2\", \"-z-10\", \"aspect-[1155/678]\", \"w-[36.125rem]\", \"max-w-none\", \"-translate-x-1/2\", \"rotate-[30deg]\", \"bg-gradient-to-tr\", \"from-[#ff80b5]\", \"to-[#9089fc]\", \"opacity-30\", \"sm:left-[calc(50%-40rem)]\", \"sm:w-[72.1875rem]\", 2, \"clip-path\", \"polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"], [1, \"mx-auto\", \"max-w-2xl\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"tracking-tight\", \"text-gray-900\", \"sm:text-4xl\"], [1, \"mt-2\", \"text-lg\", \"leading-8\", \"text-gray-600\"], [\"action\", \"#\", \"method\", \"POST\", 1, \"mx-auto\", \"mt-16\", \"max-w-xl\", \"sm:mt-20\", 3, \"formGroup\", \"ngSubmit\"], [1, \"flex\", \"gap-x-8\", \"gap-y-6\", \"sm:grid-cols-2\"], [1, \"w-72\"], [\"for\", \"rutina\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [1, \"mt-2.5\"], [\"type\", \"text\", \"formControlName\", \"rutina\", \"name\", \"rutina\", \"id\", \"rutina\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"px-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [\"class\", \"bg-red-500 my-4 border rounded text-white p-2\", 4, \"ngIf\"], [1, \"mt-10\"], [\"type\", \"submit\", 1, \"block\", \"w-full\", \"rounded-md\", \"bg-indigo-600\", \"px-3.5\", \"py-2.5\", \"text-center\", \"text-sm\", \"font-semibold\", \"text-white\", \"shadow-sm\", \"hover:bg-indigo-500\", \"focus-visible:outline\", \"focus-visible:outline-2\", \"focus-visible:outline-offset-2\", \"focus-visible:outline-indigo-600\"], [1, \"bg-red-500\", \"my-4\", \"border\", \"rounded\", \"text-white\", \"p-2\"]],\n    template: function CrearComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Empieza tu rutina.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \"Crea tu rutina y empieza a crear ejercicios.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function CrearComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Nombre de la rutina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵtemplate(15, CrearComponent_div_15_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 13)(17, \"button\", 14);\n        i0.ɵɵtext(18, \"Crear rutina\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacion(\"rutina\"));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhci5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ydXRpbmEvY3JlYXIvY3JlYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CrearComponent","constructor","fb","service","route","formularioEnviado","rutina","miFormulario","group","required","validacion","arg","controls","hasError","touched","enviar","console","log","invalid","markAllAsTouched","crearRutina","value","subscribe","response","navigate","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","CrudService","i3","Router","_2","selectors","decls","vars","consts","template","CrearComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","CrearComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","CrearComponent_div_15_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\components\\rutina\\crear\\crear.component.ts","C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\components\\rutina\\crear\\crear.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Rutina } from 'src/app/interfaces/rutina';\nimport { CrudService } from 'src/app/service/crudRutina.service';\n\n@Component({\n  selector: 'app-crear',\n  templateUrl: './crear.component.html',\n  styleUrls: ['./crear.component.css']\n})\nexport class CrearComponent {\n  public miFormulario: FormGroup;\n\n  formularioEnviado = false;\n\n  private rutina: Rutina = {\n    rutina: ''\n  }\n\n  //injectamos en el constructor \n  constructor(private fb: FormBuilder, private service: CrudService, private route: Router) { \n    this.miFormulario = this.fb.group({\n      rutina: [this.rutina.rutina, [Validators.required]],\n    })\n  }\n\n\n  validacion(arg:string){\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n\n  enviar(){\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if(this.miFormulario.invalid){\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n\n    }\n\n    //Si es correcto el formulario\n\n    this.service.crearRutina(this.miFormulario.value).subscribe(response => {\n\n      this.route.navigate(['listado']);\n    },\n    (error) => {\n      console.log(\"Respuesta erronea: \" +  error);\n    });\n  }\n}\n","<section class=\"container my-40 mx-auto\">\n\n        <div class=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\" aria-hidden=\"true\">\n          <div class=\"relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem]\" style=\"clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"></div>\n        </div>\n        <div class=\"mx-auto max-w-2xl text-center\">\n          <h2 class=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Empieza tu rutina.</h2>\n          <p class=\"mt-2 text-lg leading-8 text-gray-600\">Crea tu rutina y empieza a crear ejercicios.</p>\n        </div>\n        <form [formGroup]=\"miFormulario\" (ngSubmit)=\"enviar()\" action=\"#\" method=\"POST\" class=\"mx-auto mt-16 max-w-xl sm:mt-20\">\n          <div class=\"flex gap-x-8 gap-y-6 sm:grid-cols-2\">\n            <div class=\"w-72\">\n              <label for=\"rutina\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Nombre de la rutina</label>\n              <div class=\"mt-2.5\">\n                <input type=\"text\" formControlName=\"rutina\" name=\"rutina\" id=\"rutina\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\n                <div *ngIf=\"formularioEnviado && validacion('rutina')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\n                    Es necesario introducir un nombre para la rutina\n                </div>\n            </div>\n            </div>\n          <div class=\"mt-10\">\n            <button type=\"submit\" class=\"block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Crear rutina</button>\n          </div>\n        </div>\n        </form>\n</section>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}