{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Nitropc/Desktop/TareaFinalSpringboot/fronted/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListadoEjerciciosComponent = class ListadoEjerciciosComponent {\n  constructor(service, serviceRutina, activatedRoute, router) {\n    this.service = service;\n    this.serviceRutina = serviceRutina;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.listadoEjercicios = [];\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      //Cogemos el id del parametro\n      const id = params['id'];\n      this.id_rutina = id;\n      //comprobamos que existe en la BD\n      this.serviceRutina.obtenerRutinaPorID(id).subscribe(resp => {\n        this.nombre_rutina = resp.rutina;\n        //Si hay respuesta\n        this.devolverEjercicios();\n      }, error => {\n        console.log(error);\n        //Si da error es que no existe \n        this.router.navigate(['/listado-rutinas']);\n      });\n    });\n  }\n  devolverEjercicios() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.service.buscarEjerciciosPorRutina(_this.id_rutina).subscribe(resp => {\n        _this.listadoEjercicios = resp;\n      });\n    })();\n  }\n  eliminarEjercicio(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.service.eliminarEjercicios(id).subscribe(response => {\n        console.log(response);\n        _this2.devolverEjercicios();\n      }, error => {\n        console.log(error);\n      });\n    })();\n  }\n  actualizarEjercicio(id) {\n    this.router.navigate(['/actualizar-Ejercicios/', id]);\n    console.log(\"click\");\n  }\n  conseguirImagen(imagen) {\n    // Extraer el contenido codificado de la cadena Base64\n    imagen.split(';base64,').pop();\n    // Decodificar la cadena Base64 usando atob\n    const decodedData = atob(imagen);\n    // Convertir la cadena decodificada a un arreglo de bytes\n    const byteArray = new Uint8Array(decodedData.length);\n    for (let i = 0; i < decodedData.length; i++) {\n      byteArray[i] = decodedData.charCodeAt(i);\n    }\n    // Crear un Blob a partir del arreglo de bytes\n    const blob = new Blob([byteArray], {\n      type: 'image/png'\n    });\n    // Crear una URL válida para la imagen\n    const imageUrl = URL.createObjectURL(blob);\n    return imageUrl;\n  }\n};\nListadoEjerciciosComponent = __decorate([Component({\n  selector: 'app-listado-ejercicio',\n  templateUrl: './listado.component.html',\n  styleUrls: ['./listado.component.css']\n})], ListadoEjerciciosComponent);","map":{"version":3,"names":["Component","ListadoEjerciciosComponent","constructor","service","serviceRutina","activatedRoute","router","listadoEjercicios","ngOnInit","params","subscribe","id","id_rutina","obtenerRutinaPorID","resp","nombre_rutina","rutina","devolverEjercicios","error","console","log","navigate","_this","_asyncToGenerator","buscarEjerciciosPorRutina","eliminarEjercicio","_this2","eliminarEjercicios","response","actualizarEjercicio","conseguirImagen","imagen","split","pop","decodedData","atob","byteArray","Uint8Array","length","i","charCodeAt","blob","Blob","type","imageUrl","URL","createObjectURL","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\auth\\page\\ejercicios\\listado\\listado.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs';\r\nimport { Ejercicios } from 'src/app/interfaces/ejercicios';\r\nimport { Rutina } from 'src/app/interfaces/rutina';\r\nimport { CrudEjercicioService } from 'src/app/service/crudEjercicio.service';\r\nimport { CrudRutinaService } from 'src/app/service/crudRutina.service';\r\n\r\n@Component({\r\n  selector: 'app-listado-ejercicio',\r\n  templateUrl: './listado.component.html',\r\n  styleUrls: ['./listado.component.css']\r\n})\r\nexport class ListadoEjerciciosComponent {\r\n  public listadoEjercicios: Ejercicios[] = [];\r\n\r\n  public id_rutina!: Number;\r\n  public nombre_rutina!: String;\r\n\r\n  constructor(private service: CrudEjercicioService, private serviceRutina: CrudRutinaService, private activatedRoute: ActivatedRoute, private router: Router){\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      //Cogemos el id del parametro\r\n      const id = params['id'];\r\n      this.id_rutina = id;\r\n      //comprobamos que existe en la BD\r\n      this.serviceRutina.obtenerRutinaPorID(id).subscribe(resp => {\r\n        this.nombre_rutina = resp.rutina;\r\n        //Si hay respuesta\r\n        this.devolverEjercicios();\r\n      }, (error) => {\r\n        console.log(error);\r\n        //Si da error es que no existe \r\n        this.router.navigate(['/listado-rutinas']);\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n  async devolverEjercicios(){\r\n     this.service.buscarEjerciciosPorRutina(this.id_rutina).subscribe(resp => {\r\n      this.listadoEjercicios = resp;\r\n    });\r\n  }\r\n\r\n  async eliminarEjercicio(id: any){\r\n    this.service.eliminarEjercicios(id).subscribe(response => {\r\n      console.log(response );\r\n      this.devolverEjercicios();\r\n    },(error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n  actualizarEjercicio(id: any){\r\n    this.router.navigate(['/actualizar-Ejercicios/' , id]);\r\n    console.log(\"click\");\r\n  }\r\n\r\n  public conseguirImagen(imagen: any){\r\n    // Extraer el contenido codificado de la cadena Base64\r\n    imagen.split(';base64,').pop();\r\n\r\n    // Decodificar la cadena Base64 usando atob\r\n    const decodedData = atob(imagen);\r\n\r\n    // Convertir la cadena decodificada a un arreglo de bytes\r\n    const byteArray = new Uint8Array(decodedData.length);\r\n    for (let i = 0; i < decodedData.length; i++) {\r\n      byteArray[i] = decodedData.charCodeAt(i);\r\n    }\r\n\r\n    // Crear un Blob a partir del arreglo de bytes\r\n    const blob = new Blob([byteArray], { type: 'image/png' });\r\n\r\n    // Crear una URL válida para la imagen\r\n    const imageUrl = URL.createObjectURL(blob);\r\n    return imageUrl;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}