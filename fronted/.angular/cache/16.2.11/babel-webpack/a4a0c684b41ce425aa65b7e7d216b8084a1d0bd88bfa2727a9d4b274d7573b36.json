{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  //injectamos en el constructor \n  constructor(fb, route, service) {\n    this.fb = fb;\n    this.route = route;\n    this.service = service;\n    this.formularioEnviado = false;\n    this.user = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    };\n    this.miFormulario = this.fb.group({\n      firstName: [this.user.firstName, [Validators.required]],\n      lastName: [this.user.lastName, [Validators.required]],\n      email: [this.user.email, [Validators.required]],\n      password: [this.user.password, [Validators.required]]\n    });\n  }\n  validacion(arg) {\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if (this.miFormulario.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n    }\n    //Si es correcto el formulario\n    this.service.registrarse(this.miFormulario.value);\n    console.log(this.miFormulario.value);\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","fb","route","service","formularioEnviado","user","firstName","lastName","email","password","miFormulario","group","required","validacion","arg","controls","hasError","touched","enviar","console","log","invalid","markAllAsTouched","registrarse","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/auth/interfaces/user';\nimport { UserRegister } from 'src/app/auth/interfaces/userRegister';\nimport { AuthService } from 'src/app/auth/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  public miFormulario: FormGroup;\n\n  formularioEnviado = false;\n\n  private user: UserRegister = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n\n  //injectamos en el constructor \n  constructor(private fb: FormBuilder, private route: Router, private service: AuthService) { \n    this.miFormulario = this.fb.group({\n      firstName: [this.user.firstName, [Validators.required]],\n      lastName: [this.user.lastName, [Validators.required]],\n      email: [this.user.email, [Validators.required]],\n      password: [this.user.password, [Validators.required]],\n    })\n  }\n\n\n  validacion(arg:string){\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n\n  enviar(){\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if(this.miFormulario.invalid){\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n\n    }\n\n    //Si es correcto el formulario\n    this.service.registrarse(this.miFormulario.value)\n\n    console.log(this.miFormulario.value);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAW5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAY5B;EACAC,YAAoBC,EAAe,EAAUC,KAAa,EAAUC,OAAoB;IAApE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAAkB,KAAAC,OAAO,GAAPA,OAAO;IAV3E,KAAAC,iBAAiB,GAAG,KAAK;IAEjB,KAAAC,IAAI,GAAiB;MAC3BC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAIC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC;MAChCL,SAAS,EAAE,CAAC,IAAI,CAACD,IAAI,CAACC,SAAS,EAAE,CAACR,UAAU,CAACc,QAAQ,CAAC,CAAC;MACvDL,QAAQ,EAAE,CAAC,IAAI,CAACF,IAAI,CAACE,QAAQ,EAAE,CAACT,UAAU,CAACc,QAAQ,CAAC,CAAC;MACrDJ,KAAK,EAAE,CAAC,IAAI,CAACH,IAAI,CAACG,KAAK,EAAE,CAACV,UAAU,CAACc,QAAQ,CAAC,CAAC;MAC/CH,QAAQ,EAAE,CAAC,IAAI,CAACJ,IAAI,CAACI,QAAQ,EAAE,CAACX,UAAU,CAACc,QAAQ,CAAC;KACrD,CAAC;EACJ;EAGAC,UAAUA,CAACC,GAAU;IACnB,OAAO,IAAI,CAACJ,YAAY,CAACK,QAAQ,CAAC,GAAGD,GAAG,EAAE,CAAC,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAI,IAAI,CAACN,YAAY,CAACK,QAAQ,CAAC,GAAGD,GAAG,EAAE,CAAC,CAACG,OAAO;EAClH;EAEAC,MAAMA,CAAA;IACJ;IACA,IAAI,CAACd,iBAAiB,GAAG,IAAI;IAC7Be,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAG,IAAI,CAACV,YAAY,CAACW,OAAO,EAAC;MAC3B;MACA,IAAI,CAACX,YAAY,CAACY,gBAAgB,EAAE;MACpC;;IAIF;IACA,IAAI,CAACnB,OAAO,CAACoB,WAAW,CAAC,IAAI,CAACb,YAAY,CAACc,KAAK,CAAC;IAEjDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,YAAY,CAACc,KAAK,CAAC;EACtC;CACD;AA3CYzB,iBAAiB,GAAA0B,UAAA,EAL7B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW7B,iBAAiB,CA2C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}