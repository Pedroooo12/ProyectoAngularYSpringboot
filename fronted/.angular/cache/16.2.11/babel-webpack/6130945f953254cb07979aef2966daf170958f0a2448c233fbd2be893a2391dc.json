{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/crudEjercicio.service\";\nimport * as i3 from \"src/app/service/crudRutina.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction ActualizarEjercicioComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Es necesario introducir un nombre para el ejercicio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarEjercicioComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Es necesario como m\\u00EDnimo poner una serie. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarEjercicioComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Es necesario como m\\u00EDnimo poner una repetici\\u00F3n. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActualizarEjercicioComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Es necesario introducir un nombre para la rutina. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ActualizarEjercicioComponent {\n  //injectamos en el constructor \n  constructor(fb, service, serviceRutina, router, route) {\n    this.fb = fb;\n    this.service = service;\n    this.serviceRutina = serviceRutina;\n    this.router = router;\n    this.route = route;\n    this.formularioEnviado = false;\n    this.rutina = {\n      rutina: ''\n    };\n    this.ejercicio = {\n      nombre: '',\n      series: 0,\n      repeticiones: 0,\n      imagen: '',\n      rutina: this.rutina\n    };\n    this.miFormularioActualizar = this.fb.group({\n      nombre: [this.ejercicio.nombre, [Validators.required]],\n      series: [this.ejercicio.series, [Validators.required, Validators.min(1)]],\n      repeticiones: [this.ejercicio.repeticiones, [Validators.required, Validators.min(1)]],\n      imagen: [this.ejercicio.imagen, [Validators.required]],\n      rutina: [this.ejercicio.rutina, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id_rutina = Number(params.get('id'));\n      this.id_ejercicio = Number(params.get('idEjercicio'));\n      // Convierte el parámetro a número\n      this.serviceRutina.obtenerRutinaPorID(this.id_rutina).subscribe(resp => {\n        this.service.obtenerEjerciciosPorID(this.id_ejercicio).subscribe(resp => {\n          console.log(resp);\n          this.ejercicio.nombre = resp.nombre;\n          this.ejercicio.series = resp.series;\n          this.ejercicio.repeticiones = resp.repeticiones;\n          this.ejercicio.imagen = resp.imagen;\n          this.ejercicio.rutina = resp.rutina;\n          this.miFormularioActualizar.setValue(this.ejercicio);\n        }, error => {});\n      }, error => {\n        console.log(error);\n      });\n    });\n  }\n  validacion(arg) {\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('required') && this.miFormularioActualizar.controls[`${arg}`].touched;\n  }\n  validacionNumeros(arg) {\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('min') && this.miFormularioActualizar.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    if (this.miFormularioActualizar.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormularioActualizar.markAllAsTouched();\n      return;\n    }\n    //Si es correcto el formulario\n    this.service.actualizarEjercicios(this.ejercicio.rutina, this.miFormularioActualizar.value).subscribe(response => {\n      this.router.navigate(['listado-rutina']);\n    }, error => {\n      console.log(\"Respuesta erronea: \" + error);\n    });\n  }\n  static #_ = this.ɵfac = function ActualizarEjercicioComponent_Factory(t) {\n    return new (t || ActualizarEjercicioComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CrudEjercicioService), i0.ɵɵdirectiveInject(i3.CrudRutinaService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActualizarEjercicioComponent,\n    selectors: [[\"app-actualizar-ejercicio\"]],\n    decls: 38,\n    vars: 6,\n    consts: [[1, \"container\", \"my-40\", \"mx-auto\"], [\"aria-hidden\", \"true\", 1, \"absolute\", \"inset-x-0\", \"top-[-10rem]\", \"-z-10\", \"transform-gpu\", \"overflow-hidden\", \"blur-3xl\", \"sm:top-[-20rem]\"], [1, \"relative\", \"left-1/2\", \"-z-10\", \"aspect-[1155/678]\", \"w-[36.125rem]\", \"max-w-none\", \"-translate-x-1/2\", \"rotate-[30deg]\", \"bg-gradient-to-tr\", \"from-[#ff80b5]\", \"to-[#9089fc]\", \"opacity-30\", \"sm:left-[calc(50%-40rem)]\", \"sm:w-[72.1875rem]\", 2, \"clip-path\", \"polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"], [1, \"mx-auto\", \"max-w-2xl\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"tracking-tight\", \"text-gray-900\", \"sm:text-4xl\"], [1, \"mt-2\", \"text-lg\", \"leading-8\", \"text-gray-600\"], [\"action\", \"#\", \"method\", \"POST\", 1, \"mx-auto\", \"mt-16\", \"max-w-xl\", \"sm:mt-20\", 3, \"formGroup\", \"ngSubmit\"], [1, \"flex\", \"flex-col\", \"gap-x-8\", \"gap-y-6\", \"sm:grid-cols-2\"], [1, \"w-96\"], [\"for\", \"nombre\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [1, \"mt-2.5\"], [\"type\", \"text\", \"formControlName\", \"nombre\", \"name\", \"nombre\", \"id\", \"nombre\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"px-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [\"class\", \"bg-red-500 my-4 border rounded text-white p-2\", 4, \"ngIf\"], [\"for\", \"series\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [\"type\", \"number\", \"formControlName\", \"series\", \"name\", \"series\", \"id\", \"series\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"px-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [\"for\", \"repeticiones\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [\"type\", \"number\", \"formControlName\", \"repeticiones\", \"name\", \"repeticiones\", \"id\", \"repeticiones\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"px-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [\"for\", \"imagen\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [\"type\", \"text\", \"formControlName\", \"imagen\", \"name\", \"imagen\", \"id\", \"imagen\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"pl-12\", \"pr-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [1, \"mt-2.5\", \"relative\"], [\"type\", \"hidden\", \"name\", \"\", \"formControlName\", \"rutina\", 3, \"value\"], [1, \"mt-10\"], [\"type\", \"submit\", 1, \"block\", \"w-52\", \"rounded-md\", \"bg-indigo-600\", \"px-3.5\", \"py-2.5\", \"text-center\", \"text-sm\", \"font-semibold\", \"text-white\", \"shadow-sm\", \"hover:bg-indigo-500\", \"focus-visible:outline\", \"focus-visible:outline-2\", \"focus-visible:outline-offset-2\", \"focus-visible:outline-indigo-600\"], [1, \"bg-red-500\", \"my-4\", \"border\", \"rounded\", \"text-white\", \"p-2\"]],\n    template: function ActualizarEjercicioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Actualiza tu rutina.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \"Actualiza tu rutina de forma f\\u00E1cil.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ActualizarEjercicioComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Nombre del ejercicio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵtemplate(15, ActualizarEjercicioComponent_div_15_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 13);\n        i0.ɵɵtext(18, \"Serie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 10);\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵtemplate(21, ActualizarEjercicioComponent_div_21_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 15);\n        i0.ɵɵtext(24, \"Repeticiones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 10);\n        i0.ɵɵelement(26, \"input\", 16);\n        i0.ɵɵtemplate(27, ActualizarEjercicioComponent_div_27_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 8)(29, \"label\", 17);\n        i0.ɵɵtext(30, \"Imagen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 18);\n        i0.ɵɵelementStart(32, \"div\", 19);\n        i0.ɵɵtemplate(33, ActualizarEjercicioComponent_div_33_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(34, \"input\", 20);\n        i0.ɵɵelementStart(35, \"div\", 21)(36, \"button\", 22);\n        i0.ɵɵtext(37, \"Actualizar rutina\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormularioActualizar);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacion(\"nombre\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacionNumeros(\"series\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacionNumeros(\"repeticiones\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacion(\"imagen\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.id_rutina);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWxpemFyLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lamVyY2ljaW9zL2FjdHVhbGl6YXIvYWN0dWFsaXphci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSx3S0FBd0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ActualizarEjercicioComponent","constructor","fb","service","serviceRutina","router","route","formularioEnviado","rutina","ejercicio","nombre","series","repeticiones","imagen","miFormularioActualizar","group","required","min","ngOnInit","paramMap","subscribe","params","id_rutina","Number","get","id_ejercicio","obtenerRutinaPorID","resp","obtenerEjerciciosPorID","console","log","setValue","error","validacion","arg","controls","hasError","touched","validacionNumeros","enviar","invalid","markAllAsTouched","actualizarEjercicios","value","response","navigate","_","ɵɵdirectiveInject","i1","FormBuilder","i2","CrudEjercicioService","i3","CrudRutinaService","i4","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","ActualizarEjercicioComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ActualizarEjercicioComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","ActualizarEjercicioComponent_div_15_Template","ActualizarEjercicioComponent_div_21_Template","ActualizarEjercicioComponent_div_27_Template","ActualizarEjercicioComponent_div_33_Template","ɵɵadvance","ɵɵproperty","ɵɵpropertyInterpolate"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\components\\ejercicios\\actualizar\\actualizar.component.ts","C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\components\\ejercicios\\actualizar\\actualizar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Ejercicios } from 'src/app/interfaces/ejercicios';\r\nimport { Rutina } from 'src/app/interfaces/rutina';\r\nimport { CrudEjercicioService } from 'src/app/service/crudEjercicio.service';\r\nimport { CrudRutinaService } from 'src/app/service/crudRutina.service';\r\n\r\n@Component({\r\n  selector: 'app-actualizar-ejercicio',\r\n  templateUrl: './actualizar.component.html',\r\n  styleUrls: ['./actualizar.component.css']\r\n})\r\nexport class ActualizarEjercicioComponent implements OnInit {\r\n  public miFormularioActualizar: FormGroup;\r\n\r\n  public id_rutina!: number; //indica que si o si llega un valor\r\n  public id_ejercicio!: number;\r\n\r\n  formularioEnviado = false;\r\n\r\n  public rutina: Rutina = {\r\n    rutina: ''\r\n  };\r\n\r\n  private ejercicio: Ejercicios = {\r\n    nombre: '',\r\n    series: 0,\r\n    repeticiones: 0,\r\n    imagen: '',\r\n    rutina: this.rutina\r\n  }\r\n\r\n  //injectamos en el constructor \r\n  constructor(private fb: FormBuilder, private service: CrudEjercicioService,private serviceRutina: CrudRutinaService, private router: Router, private route: ActivatedRoute) { \r\n    this.miFormularioActualizar = this.fb.group({\r\n      nombre: [this.ejercicio.nombre, [Validators.required]],\r\n      series: [this.ejercicio.series, [Validators.required,Validators.min(1)]],\r\n      repeticiones: [this.ejercicio.repeticiones, [Validators.required, Validators.min(1)]],\r\n      imagen: [this.ejercicio.imagen, [Validators.required]],\r\n      rutina: [this.ejercicio.rutina, [Validators.required]],\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id_rutina = Number(params.get('id'));\r\n      this.id_ejercicio = Number(params.get('idEjercicio'));\r\n       // Convierte el parámetro a número\r\n      this.serviceRutina.obtenerRutinaPorID(this.id_rutina).subscribe(resp => {\r\n        this.service.obtenerEjerciciosPorID(this.id_ejercicio).subscribe(resp => {\r\n          console.log(resp);\r\n          this.ejercicio.nombre = resp.nombre;\r\n          this.ejercicio.series = resp.series;\r\n          this.ejercicio.repeticiones = resp.repeticiones;\r\n          this.ejercicio.imagen = resp.imagen;\r\n          this.ejercicio.rutina = resp.rutina;\r\n          this.miFormularioActualizar.setValue(this.ejercicio);\r\n        }, (error) => {\r\n\r\n        })\r\n        \r\n        \r\n      }, (error) => {\r\n        console.log(error);\r\n      });\r\n    });\r\n\r\n\r\n    \r\n  }\r\n\r\n  validacion(arg:string){\r\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('required') && this.miFormularioActualizar.controls[`${arg}`].touched;\r\n  }\r\n\r\n  validacionNumeros(arg:string){\r\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('min') && this.miFormularioActualizar.controls[`${arg}`].touched;\r\n  }\r\n\r\n  enviar(){\r\n    //archivo.ts\r\n    this.formularioEnviado = true;\r\n    if(this.miFormularioActualizar.invalid){\r\n      //va campo por campo y toca todo el formulario\r\n      this.miFormularioActualizar.markAllAsTouched();\r\n      return;\r\n\r\n    }\r\n\r\n    //Si es correcto el formulario\r\n\r\n    this.service.actualizarEjercicios(this.ejercicio.rutina,this.miFormularioActualizar.value).subscribe(response => {\r\n\r\n      this.router.navigate(['listado-rutina']);\r\n    },\r\n    (error) => {\r\n      console.log(\"Respuesta erronea: \" +  error);\r\n    });\r\n  }\r\n}\r\n","<section class=\"container my-40 mx-auto\">\r\n\r\n    <div class=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\" aria-hidden=\"true\">\r\n      <div class=\"relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem]\" style=\"clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"></div>\r\n    </div>\r\n    <div class=\"mx-auto max-w-2xl text-center\">\r\n      <h2 class=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Actualiza tu rutina.</h2>\r\n      <p class=\"mt-2 text-lg leading-8 text-gray-600\">Actualiza tu rutina de forma fácil.</p>\r\n    </div>\r\n        <form [formGroup]=\"miFormularioActualizar\" (ngSubmit)=\"enviar()\" action=\"#\" method=\"POST\" class=\"mx-auto mt-16 max-w-xl sm:mt-20\">\r\n          <div class=\"flex flex-col gap-x-8 gap-y-6 sm:grid-cols-2\">\r\n            <div class=\"w-96\">\r\n              <label for=\"nombre\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Nombre del ejercicio</label>\r\n              <div class=\"mt-2.5\">\r\n                <input type=\"text\" formControlName=\"nombre\" name=\"nombre\" id=\"nombre\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\r\n                <div *ngIf=\"formularioEnviado && validacion('nombre')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\r\n                    Es necesario introducir un nombre para el ejercicio.\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"w-96\">\r\n              <label for=\"series\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Serie</label>\r\n              <div class=\"mt-2.5\">\r\n                <input type=\"number\" formControlName=\"series\" name=\"series\" id=\"series\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\r\n                <div *ngIf=\"formularioEnviado && validacionNumeros('series')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\r\n                    Es necesario como mínimo poner una serie.\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"w-96\">\r\n              <label for=\"repeticiones\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Repeticiones</label>\r\n              <div class=\"mt-2.5\">\r\n                <input type=\"number\" formControlName=\"repeticiones\" name=\"repeticiones\" id=\"repeticiones\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\r\n                <div *ngIf=\"formularioEnviado && validacionNumeros('repeticiones')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\r\n                    Es necesario como mínimo poner una repetición.\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"w-96\">\r\n              <label for=\"imagen\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Imagen</label>\r\n              <input type=\"text\" formControlName=\"imagen\" name=\"imagen\" id=\"imagen\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 pl-12 pr-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\r\n              <div class=\"mt-2.5 relative\">\r\n                \r\n                <div *ngIf=\"formularioEnviado && validacion('imagen')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\r\n                  Es necesario introducir un nombre para la rutina.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <input type=\"hidden\" name=\"\" formControlName=\"rutina\" value=\"{{this.id_rutina}}\">\r\n      <div class=\"mt-10\">\r\n        <button type=\"submit\" class=\"block w-52 rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Actualizar rutina</button>\r\n      </div>\r\n    </div>\r\n    </form>\r\n</section>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}