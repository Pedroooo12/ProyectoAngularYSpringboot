{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.ApiURL = \"http://localhost:9000/api/employees\";\n  }\n  buscarEmpleados() {\n    return this.http.get(this.ApiURL);\n  }\n  crearEmpleado(empleado) {\n    return this.http.post(this.ApiURL, empleado);\n  }\n  obtenerEmpleadoPorID(id) {\n    return this.http.get(`${this.ApiURL}/${id}`);\n  }\n  actualizarEmpleado(id, empleado) {\n    return this.http.put(`${this.ApiURL}/${id}`, empleado);\n  }\n  eliminarEmpleado(id) {\n    return this.http.delete(`${this.ApiURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CrudService","constructor","http","ApiURL","buscarEmpleados","get","crearEmpleado","empleado","post","obtenerEmpleadoPorID","id","actualizarEmpleado","put","eliminarEmpleado","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\service\\crudRutina.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Employee } from '../interfaces/employee';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private ApiURL = \"http://localhost:9000/api/employees\";\n\n  constructor(private http: HttpClient) { \n  }\n\n  buscarEmpleados(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.ApiURL);\n  }\n\n\n  crearEmpleado(empleado: Employee): Observable<Employee>{\n    return this.http.post<Employee>(this.ApiURL, empleado);\n  }\n\n  obtenerEmpleadoPorID(id: number): Observable<Employee>{\n    return this.http.get<Employee>(`${this.ApiURL}/${id}`);\n  }\n\n  actualizarEmpleado(id:number, empleado: Employee): Observable<Employee>{\n    return this.http.put<Employee>(`${this.ApiURL}/${id}`, empleado);\n  }\n\n  eliminarEmpleado(id:number){\n    return this.http.delete(`${this.ApiURL}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;EAGtD;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAGAG,aAAaA,CAACC,QAAkB;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACxD;EAEAE,oBAAoBA,CAACC,EAAU;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAIO,EAAE,EAAE,CAAC;EACxD;EAEAC,kBAAkBA,CAACD,EAAS,EAAEH,QAAkB;IAC9C,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,MAAM,IAAIO,EAAE,EAAE,EAAEH,QAAQ,CAAC;EAClE;EAEAM,gBAAgBA,CAACH,EAAS;IACxB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIO,EAAE,EAAE,CAAC;EACjD;EAAC,QAAAK,CAAA,G;qBA1BUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}