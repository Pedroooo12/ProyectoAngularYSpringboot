{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let ActualizarComponent = class ActualizarComponent {\n  //injectamos en el constructor \n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.formularioEnviado = false;\n    this.empleado = {\n      firstName: '',\n      lastName: '',\n      email: ''\n    };\n    this.miFormularioActualizar = this.fb.group({\n      firstName: [this.empleado.firstName, [Validators.required]],\n      lastName: [this.empleado.lastName, [Validators.required]],\n      email: [this.empleado.email, [Validators.required]]\n    });\n  }\n  emailValidator(control) {\n    const value = control.value;\n    // Verifica si el valor es nulo, tiene una longitud menor a 1 o no contiene '@'\n    if (value === null || value.trim().length < 1 || !value.includes('@')) {\n      return {\n        'invalidEmail': true\n      };\n    }\n    // Si ha pasado todas las validaciones, retorna null\n    return null;\n  }\n  validacion(arg) {\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if (this.miFormulario.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n    }\n    //Si es correcto el formulario\n    this.service.crearEmpleado(this.miFormulario.value).subscribe(response => {\n      this.route.navigate(['listado']);\n    }, error => {\n      console.log(\"Respuesta erronea: \" + error);\n    });\n  }\n};\nActualizarComponent = __decorate([Component({\n  selector: 'app-actualizar',\n  templateUrl: './actualizar.component.html',\n  styleUrls: ['./actualizar.component.css']\n})], ActualizarComponent);","map":{"version":3,"names":["Component","Validators","ActualizarComponent","constructor","fb","service","route","formularioEnviado","empleado","firstName","lastName","email","miFormularioActualizar","group","required","emailValidator","control","value","trim","length","includes","validacion","arg","miFormulario","controls","hasError","touched","enviar","console","log","invalid","markAllAsTouched","crearEmpleado","subscribe","response","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Nitropc\\Desktop\\ProyectoAngularSpringBoot\\ProyectoAngular16\\src\\app\\components\\actualizar\\actualizar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Employee } from 'src/app/interfaces/employee';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-actualizar',\n  templateUrl: './actualizar.component.html',\n  styleUrls: ['./actualizar.component.css']\n})\nexport class ActualizarComponent {\n  public miFormularioActualizar: FormGroup;\n\n  formularioEnviado = false;\n\n  private empleado: Employee = {\n    firstName: '',\n    lastName: '',\n    email: ''\n  }\n\n  //injectamos en el constructor \n  constructor(private fb: FormBuilder, private service: CrudService, private route: Router) { \n    this.miFormularioActualizar = this.fb.group({\n      firstName: [this.empleado.firstName, [Validators.required]],\n      lastName: [this.empleado.lastName, [Validators.required]],\n      email: [this.empleado.email, [Validators.required]]\n    })\n  }\n\n  \n  emailValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    const value = control.value;\n  \n    // Verifica si el valor es nulo, tiene una longitud menor a 1 o no contiene '@'\n    if (value === null || value.trim().length < 1 || !value.includes('@')) {\n      return { 'invalidEmail': true };\n    }\n  \n    // Si ha pasado todas las validaciones, retorna null\n    return null;\n  }\n\n  validacion(arg:string){\n    return this.miFormulario.controls[`${arg}`].hasError('required') && this.miFormulario.controls[`${arg}`].touched;\n  }\n\n  enviar(){\n    //archivo.ts\n    this.formularioEnviado = true;\n    console.log(\"Enviar\");\n    if(this.miFormulario.invalid){\n      //va campo por campo y toca todo el formulario\n      this.miFormulario.markAllAsTouched();\n      return;\n\n    }\n\n    //Si es correcto el formulario\n\n    this.service.crearEmpleado(this.miFormulario.value).subscribe(response => {\n\n      this.route.navigate(['listado']);\n    },\n    (error) => {\n      console.log(\"Respuesta erronea: \" +  error);\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAkDC,UAAU,QAAQ,gBAAgB;AAU7E,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAW9B;EACAC,YAAoBC,EAAe,EAAUC,OAAoB,EAAUC,KAAa;IAApE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,OAAO,GAAPA,OAAO;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAThF,KAAAC,iBAAiB,GAAG,KAAK;IAEjB,KAAAC,QAAQ,GAAa;MAC3BC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;IAIC,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MAC1CJ,SAAS,EAAE,CAAC,IAAI,CAACD,QAAQ,CAACC,SAAS,EAAE,CAACR,UAAU,CAACa,QAAQ,CAAC,CAAC;MAC3DJ,QAAQ,EAAE,CAAC,IAAI,CAACF,QAAQ,CAACE,QAAQ,EAAE,CAACT,UAAU,CAACa,QAAQ,CAAC,CAAC;MACzDH,KAAK,EAAE,CAAC,IAAI,CAACH,QAAQ,CAACG,KAAK,EAAE,CAACV,UAAU,CAACa,QAAQ,CAAC;KACnD,CAAC;EACJ;EAGAC,cAAcA,CAACC,OAAwB;IACrC,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAE3B;IACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;MACrE,OAAO;QAAE,cAAc,EAAE;MAAI,CAAE;;IAGjC;IACA,OAAO,IAAI;EACb;EAEAC,UAAUA,CAACC,GAAU;IACnB,OAAO,IAAI,CAACC,YAAY,CAACC,QAAQ,CAAC,GAAGF,GAAG,EAAE,CAAC,CAACG,QAAQ,CAAC,UAAU,CAAC,IAAI,IAAI,CAACF,YAAY,CAACC,QAAQ,CAAC,GAAGF,GAAG,EAAE,CAAC,CAACI,OAAO;EAClH;EAEAC,MAAMA,CAAA;IACJ;IACA,IAAI,CAACpB,iBAAiB,GAAG,IAAI;IAC7BqB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAG,IAAI,CAACN,YAAY,CAACO,OAAO,EAAC;MAC3B;MACA,IAAI,CAACP,YAAY,CAACQ,gBAAgB,EAAE;MACpC;;IAIF;IAEA,IAAI,CAAC1B,OAAO,CAAC2B,aAAa,CAAC,IAAI,CAACT,YAAY,CAACN,KAAK,CAAC,CAACgB,SAAS,CAACC,QAAQ,IAAG;MAEvE,IAAI,CAAC5B,KAAK,CAAC6B,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC,EACAC,KAAK,IAAI;MACRR,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAIO,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;CACD;AA1DYlC,mBAAmB,GAAAmC,UAAA,EAL/BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWtC,mBAAmB,CA0D/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}