{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/auth/services/auth.service\";\nimport * as i3 from \"src/app/service/crudRutina.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction ActualizarComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Es necesario introducir un nombre para la rutina \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ActualizarComponent {\n  //injectamos en el constructor \n  constructor(fb, serviceAuth, service, router, route) {\n    this.fb = fb;\n    this.serviceAuth = serviceAuth;\n    this.service = service;\n    this.router = router;\n    this.route = route;\n    this.formularioEnviado = false;\n    this.rutina = {\n      rutina: '',\n      user: this.user\n    };\n    this.miFormularioActualizar = this.fb.group({\n      rutina: [this.rutina.rutina, [Validators.required]],\n      user: [this.rutina.user]\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id_rutina = Number(params.get('id')); // Convierte el parámetro a número\n      this.service.obtenerRutinaPorID(this.id_rutina).subscribe(resp => {\n        if (this.serviceAuth.currentUser) {\n          this.user = this.serviceAuth.currentUser;\n          this.miFormularioActualizar.setValue({\n            rutina: resp.rutina,\n            user: this.user\n            // Otros campos del formulario si los hay\n          });\n        }\n      }, error => {\n        console.log(error);\n      });\n    });\n  }\n  validacion(arg) {\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('required') && this.miFormularioActualizar.controls[`${arg}`].touched;\n  }\n  enviar() {\n    //archivo.ts\n    this.formularioEnviado = true;\n    if (this.miFormularioActualizar.invalid) {\n      //va campo por campo y toca todo el formulario\n      this.miFormularioActualizar.markAllAsTouched();\n      return;\n    }\n    //Si es correcto el formulario\n    this.service.actualizarRutina(this.id_rutina, this.miFormularioActualizar.value).subscribe(response => {\n      this.router.navigate(['/auth/listado-rutina']);\n    }, error => {\n      console.log(\"Respuesta erronea: \" + error);\n    });\n  }\n  static #_ = this.ɵfac = function ActualizarComponent_Factory(t) {\n    return new (t || ActualizarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.CrudRutinaService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActualizarComponent,\n    selectors: [[\"app-actualizar\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\", \"my-40\", \"mx-auto\"], [\"aria-hidden\", \"true\", 1, \"absolute\", \"inset-x-0\", \"top-[-10rem]\", \"-z-10\", \"transform-gpu\", \"overflow-hidden\", \"blur-3xl\", \"sm:top-[-20rem]\"], [1, \"relative\", \"left-1/2\", \"-z-10\", \"aspect-[1155/678]\", \"w-[36.125rem]\", \"max-w-none\", \"-translate-x-1/2\", \"rotate-[30deg]\", \"bg-gradient-to-tr\", \"from-[#ff80b5]\", \"to-[#9089fc]\", \"opacity-30\", \"sm:left-[calc(50%-40rem)]\", \"sm:w-[72.1875rem]\", 2, \"clip-path\", \"polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"], [1, \"mx-auto\", \"max-w-2xl\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"tracking-tight\", \"text-gray-900\", \"sm:text-4xl\"], [1, \"mt-2\", \"text-lg\", \"leading-8\", \"text-gray-600\"], [\"action\", \"#\", \"method\", \"POST\", 1, \"mx-auto\", \"mt-16\", \"max-w-xl\", \"sm:mt-20\", 3, \"formGroup\", \"ngSubmit\"], [1, \"flex\", \"w-96\", \"flex-col\", \"gap-y-6\", \"sm:grid-cols-2\"], [\"for\", \"rutina\", 1, \"block\", \"w-72\", \"text-sm\", \"font-semibold\", \"leading-6\", \"text-gray-900\"], [1, \"mt-2.5\"], [\"type\", \"text\", \"formControlName\", \"rutina\", \"name\", \"rutina\", \"id\", \"rutina\", \"autocomplete\", \"given-name\", 1, \"block\", \"w-full\", \"rounded-md\", \"border-0\", \"px-3.5\", \"py-2\", \"text-gray-900\", \"shadow-sm\", \"ring-1\", \"ring-inset\", \"ring-gray-300\", \"placeholder:text-gray-400\", \"focus:ring-2\", \"focus:ring-inset\", \"focus:ring-indigo-600\", \"sm:text-sm\", \"sm:leading-6\"], [\"class\", \"bg-red-500 my-4 border rounded text-white p-2\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"block\", \"w-1/4\", \"mr-auto\", \"rounded-md\", \"bg-indigo-600\", \"px-3.5\", \"py-2.5\", \"text-center\", \"text-sm\", \"font-semibold\", \"text-white\", \"shadow-sm\", \"hover:bg-indigo-500\", \"focus-visible:outline\", \"focus-visible:outline-2\", \"focus-visible:outline-offset-2\", \"focus-visible:outline-indigo-600\"], [1, \"bg-red-500\", \"my-4\", \"border\", \"rounded\", \"text-white\", \"p-2\"]],\n    template: function ActualizarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Actualiza tu rutina.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \"Actualiza tu rutina de forma f\\u00E1cil.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ActualizarComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\")(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Nombre de la rutina\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, ActualizarComponent_div_15_Template, 2, 0, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\")(17, \"button\", 12);\n        i0.ɵɵtext(18, \"Actualizar rutina\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.miFormularioActualizar);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.formularioEnviado && ctx.validacion(\"rutina\"));\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWxpemFyLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9wYWdlL3J1dGluYS9hY3R1YWxpemFyL2FjdHVhbGl6YXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ActualizarComponent","constructor","fb","serviceAuth","service","router","route","formularioEnviado","rutina","user","miFormularioActualizar","group","required","ngOnInit","paramMap","subscribe","params","id_rutina","Number","get","obtenerRutinaPorID","resp","currentUser","setValue","error","console","log","validacion","arg","controls","hasError","touched","enviar","invalid","markAllAsTouched","actualizarRutina","value","response","navigate","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","CrudRutinaService","i4","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","ActualizarComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ActualizarComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","ActualizarComponent_div_15_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\auth\\page\\rutina\\actualizar\\actualizar.component.ts","C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\auth\\page\\rutina\\actualizar\\actualizar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { User } from 'src/app/auth/interfaces/user';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\nimport { Rutina } from 'src/app/interfaces/rutina';\r\nimport { CrudRutinaService } from 'src/app/service/crudRutina.service';\r\n\r\n@Component({\r\n  selector: 'app-actualizar',\r\n  templateUrl: './actualizar.component.html',\r\n  styleUrls: ['./actualizar.component.css']\r\n})\r\nexport class ActualizarComponent implements OnInit {\r\n  public miFormularioActualizar: FormGroup;\r\n\r\n  public id_rutina!: number; //indica que si o si llega un valor\r\n\r\n  formularioEnviado = false;\r\n\r\n  private user!: User; \r\n\r\n  private rutina: Rutina = {\r\n    rutina: '',\r\n    user: this.user\r\n  }\r\n\r\n  //injectamos en el constructor \r\n  constructor(private fb: FormBuilder,private serviceAuth: AuthService, private service: CrudRutinaService, private router: Router, private route: ActivatedRoute) { \r\n    this.miFormularioActualizar = this.fb.group({\r\n      rutina: [this.rutina.rutina, [Validators.required]],\r\n      user: [this.rutina.user]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id_rutina = Number(params.get('id')) // Convierte el parámetro a número\r\n      this.service.obtenerRutinaPorID(this.id_rutina).subscribe(resp => {\r\n        if(this.serviceAuth.currentUser){\r\n          this.user = this.serviceAuth.currentUser;\r\n          this.miFormularioActualizar.setValue({\r\n            rutina: resp.rutina,\r\n            user: this.user\r\n            // Otros campos del formulario si los hay\r\n          });\r\n        }\r\n        \r\n      }, (error) => {\r\n        console.log(error);\r\n      });\r\n    });\r\n\r\n\r\n    \r\n  }\r\n\r\n  validacion(arg:string){\r\n    return this.miFormularioActualizar.controls[`${arg}`].hasError('required') && this.miFormularioActualizar.controls[`${arg}`].touched;\r\n  }\r\n\r\n  enviar(){\r\n    //archivo.ts\r\n    this.formularioEnviado = true;\r\n    if(this.miFormularioActualizar.invalid){\r\n      //va campo por campo y toca todo el formulario\r\n      this.miFormularioActualizar.markAllAsTouched();\r\n      return;\r\n\r\n    }\r\n\r\n    //Si es correcto el formulario\r\n\r\n    this.service.actualizarRutina(this.id_rutina,this.miFormularioActualizar.value).subscribe(response => {\r\n\r\n      this.router.navigate(['/auth/listado-rutina']);\r\n    },\r\n    (error) => {\r\n      console.log(\"Respuesta erronea: \" +  error);\r\n    });\r\n  }\r\n}\r\n","<section class=\"container my-40 mx-auto\">\r\n\r\n    <div class=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\" aria-hidden=\"true\">\r\n      <div class=\"relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem]\" style=\"clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\"></div>\r\n    </div>\r\n    <div class=\"mx-auto max-w-2xl text-center\">\r\n      <h2 class=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Actualiza tu rutina.</h2>\r\n      <p class=\"mt-2 text-lg leading-8 text-gray-600\">Actualiza tu rutina de forma fácil.</p>\r\n    </div>\r\n    <form [formGroup]=\"miFormularioActualizar\" (ngSubmit)=\"enviar()\" action=\"#\" method=\"POST\" class=\"mx-auto mt-16 max-w-xl sm:mt-20\">\r\n      <div class=\"flex  w-96 flex-col gap-y-6 sm:grid-cols-2\">\r\n        <div>\r\n          <label for=\"rutina\" class=\"block w-72 text-sm font-semibold leading-6 text-gray-900\">Nombre de la rutina</label>\r\n          <div class=\"mt-2.5\">\r\n            <input type=\"text\" formControlName=\"rutina\" name=\"rutina\" id=\"rutina\" autocomplete=\"given-name\" class=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\">\r\n            <div *ngIf=\"formularioEnviado && validacion('rutina')\" class=\"bg-red-500 my-4 border rounded text-white p-2\">\r\n                Es necesario introducir un nombre para la rutina\r\n            </div>\r\n        </div>\r\n        </div>\r\n      <div >\r\n        <button type=\"submit\" class=\"block w-1/4 mr-auto rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Actualizar rutina</button>\r\n      </div>\r\n    </div>\r\n    </form>\r\n</section>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}