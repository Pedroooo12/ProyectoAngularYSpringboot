{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudRutinaService {\n  constructor(http) {\n    this.http = http;\n    this.ApiURL = \"http://localhost:9000/api/rutina\";\n  }\n  buscarRutinas(id) {\n    return this.http.get(`${this.ApiURL}/user/${id}`);\n  }\n  crearRutina(rutina) {\n    return this.http.post(this.ApiURL, rutina);\n  }\n  obtenerRutinaPorID(id) {\n    return this.http.get(`${this.ApiURL}/${id}`);\n  }\n  actualizarRutina(id, rutina) {\n    return this.http.put(`${this.ApiURL}/${id}`, rutina);\n  }\n  eliminarRutina(id) {\n    return this.http.delete(`${this.ApiURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function CrudRutinaService_Factory(t) {\n    return new (t || CrudRutinaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudRutinaService,\n    factory: CrudRutinaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CrudRutinaService","constructor","http","ApiURL","buscarRutinas","id","get","crearRutina","rutina","post","obtenerRutinaPorID","actualizarRutina","put","eliminarRutina","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Nitropc\\Desktop\\TareaFinalSpringboot\\fronted\\src\\app\\service\\crudRutina.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Rutina } from '../interfaces/rutina';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudRutinaService {\r\n\r\n  private ApiURL = \"http://localhost:9000/api/rutina\";\r\n\r\n  constructor(private http: HttpClient) { \r\n  }\r\n\r\n  buscarRutinas(id: Number): Observable<Rutina[]> {\r\n    return this.http.get<Rutina[]>(`${this.ApiURL}/user/${id}`);\r\n  }\r\n\r\n\r\n  crearRutina(rutina: Rutina): Observable<Rutina>{\r\n    return this.http.post<Rutina>(this.ApiURL, rutina);\r\n  }\r\n\r\n  obtenerRutinaPorID(id: number): Observable<Rutina>{\r\n    return this.http.get<Rutina>(`${this.ApiURL}/${id}`);\r\n  }\r\n\r\n  actualizarRutina(id:number, rutina: Rutina): Observable<Rutina>{\r\n    return this.http.put<Rutina>(`${this.ApiURL}/${id}`, rutina);\r\n  }\r\n\r\n  eliminarRutina(id:number): Observable<Rutina>{\r\n    return this.http.delete<Rutina>(`${this.ApiURL}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAGnD;EAEAC,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,MAAM,SAASE,EAAE,EAAE,CAAC;EAC7D;EAGAE,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,IAAI,CAACN,MAAM,EAAEK,MAAM,CAAC;EACpD;EAEAE,kBAAkBA,CAACL,EAAU;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,IAAIE,EAAE,EAAE,CAAC;EACtD;EAEAM,gBAAgBA,CAACN,EAAS,EAAEG,MAAc;IACxC,OAAO,IAAI,CAACN,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,IAAIE,EAAE,EAAE,EAAEG,MAAM,CAAC;EAC9D;EAEAK,cAAcA,CAACR,EAAS;IACtB,OAAO,IAAI,CAACH,IAAI,CAACY,MAAM,CAAS,GAAG,IAAI,CAACX,MAAM,IAAIE,EAAE,EAAE,CAAC;EACzD;EAAC,QAAAU,CAAA,G;qBA1BUf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}